{"version":3,"sources":["components/CreateToDo.js","components/Update.js","components/ToDo.js","App.js","index.js"],"names":["CreateToDo","setEntries","entries","useState","entry","setEntry","styles","form","textAlign","input","width","margin","boxShadow","button","style","className","for","type","placeholder","value","onChange","e","target","onClick","event","preventDefault","id","uuidv4","newEntry","done","Update","task","show","handleClose","updatedEntry","setUpdatedEntry","useEffect","Modal","onHide","Header","closeButton","Title","Body","Footer","Button","variant","ToDo","setShow","color","setColor","updatedEntries","forEach","push","checked","class","unChecked","checkbox","setCheckbox","toDo","border","minHeight","marginTop","backgroundColor","paddingTop","borderRadius","fontSize","cursor","remainingEntries","filter","onMouseOver","onMouseLeave","App","savedEntries","JSON","parse","localStorage","getItem","setItem","stringify","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7b9c6a0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nfunction CreateToDo({setEntries, entries}) {\n    const [entry, setEntry] = useState(\"\");\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const id = uuidv4();\n        const newEntry = { entry, id, done: false };\n        setEntries([...entries, newEntry]);\n        setEntry(\"\");\n    };\n\n    const styles = {\n        form: {\n            textAlign: \"center\"\n        },\n        input: {\n            width: \"50vw\",\n            margin: \"0 auto\",\n            boxShadow: \"1px 1px 15px -8px black\"\n        },\n        button: {\n          boxShadow: \"1px 1px 15px -5px black\"\n        }\n    };\n\n  return (\n    <form style={styles.form}>\n      <div className=\"form-group\">\n          <label for=\"newToDo\">New entry:</label>\n          <input \n            type=\"text\" \n            className=\"form-control text-center\" \n            placeholder=\"Enter task here\" \n            style={styles.input}\n            value={entry}\n            onChange={(e) => setEntry(e.target.value)}\n          />\n      </div>\n      <button type=\"submit\" className=\"btn btn-primary\" style={styles.button} onClick={handleSubmit}>Add to list</button>\n    </form>\n  );\n}\n\nexport default CreateToDo;\n","import React, { useState, useEffect } from \"react\";\nimport {Modal, Button} from \"react-bootstrap\";\n\nfunction Update({task, show, handleClose, setEntry}) {\n    const [updatedEntry, setUpdatedEntry] = useState(task);\n\n    useEffect(() => {\n        setUpdatedEntry(task);\n    }, []);\n\n    const handleUpdate = () => {\n        setEntry(updatedEntry);\n        handleClose();\n    };\n\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Update Entry</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <input \n            type=\"text\"\n            className=\"form-control text-center\"\n            value={updatedEntry}\n            onChange={(e) => setUpdatedEntry(e.target.value)}\n        />\n      </Modal.Body>\n\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\n        <Button variant=\"primary\" onClick={handleUpdate}>Save changes</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default Update;\n","import React, { useState, useEffect } from \"react\";\nimport Update from \"./Update\";\n\nfunction ToDo({ task, done, id, entries, setEntries }) {\n  const [show, setShow] = useState(false);\n  const [entry, setEntry] = useState(task);\n  const [color, setColor] = useState(\"darkblue\");\n\n  useEffect(() => {\n    let updatedEntries = [];\n    entries.forEach((task) => {\n      if (task.id === id) {\n        task.entry = entry;\n      }\n      updatedEntries.push(task);\n    });\n    setEntries(updatedEntries);\n  }, [entry]);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const checked = {\n    class: \"far fa-check-square\",\n    color: \"green\",\n  };\n  const unChecked = {\n    class: \"far fa-square\",\n    color: \"rgb(187, 31, 31)\",\n  };\n  const [checkbox, setCheckbox] = useState(done ? checked : unChecked);\n\n  const handleCheckbox = () => {\n    if (checkbox.color === unChecked.color) {\n      setCheckbox(checked);\n    } else {\n      setCheckbox(unChecked);\n    }\n    let updatedEntries = [];\n    entries.forEach((task) => {\n      if (task.id === id) {\n        task.done = !task.done;\n      }\n      updatedEntries.push(task);\n    });\n    setEntries(updatedEntries);\n  };\n\n  const handleDelete = () => {\n    const remainingEntries = entries.filter((entry) => entry.id !== id);\n    setEntries(remainingEntries);\n  };\n\n  const changeColor = () => {\n    setColor(\"white\");\n  };\n\n  const changeBack = () => {\n    setColor(\"darkblue\");\n  };\n\n  const styles = {\n    toDo: {\n      border: \"1px solid black\",\n      width: \"75vw\",\n      minHeight: \"60px\",\n      margin: \"0 auto\",\n      marginTop: \"2vh\",\n      backgroundColor: `${checkbox.color}`,\n      color: \"darkblue\",\n      paddingTop: \"17px\",\n      boxShadow: \"1px 1px 15px -3px black\",\n      borderRadius: \"15px\"\n    },\n    checkbox: {\n      fontSize: \"25px\",\n      cursor: \"pointer\",\n    },\n    entry: {\n      cursor: \"pointer\",\n      color: `${color}`,\n    },\n  };\n  return (\n    <div style={styles.toDo} className=\"row\">\n      <div className=\"col-2 col-md-1\">\n        <span\n          className=\"far fa-trash-alt\"\n          style={styles.checkbox}\n          onClick={handleDelete}\n        />\n      </div>\n      <div className=\"col-8 col-md-10\">\n        <p\n          className=\"text-center\"\n          onClick={handleShow}\n          style={styles.entry}\n          onMouseOver={changeColor}\n          onMouseLeave={changeBack}\n        >\n          {entry}\n        </p>\n      </div>\n      <div className=\"col-2 col-md-1 text-right\">\n        <span\n          className={checkbox.class}\n          style={styles.checkbox}\n          onClick={handleCheckbox}\n        />\n      </div>\n      <Update\n        task={entry}\n        show={show}\n        handleClose={handleClose}\n        setEntry={setEntry}\n      />\n    </div>\n  );\n}\n\nexport default ToDo;\n","import React, { useState, useEffect } from \"react\";\nimport CreateToDo from \"./components/CreateToDo\";\nimport ToDo from \"./components/ToDo\";\nimport \"./App.css\";\n\nfunction App() {\n  const [entries, setEntries] = useState([]);\n\n  useEffect(() => {\n    const savedEntries = JSON.parse(localStorage.getItem(\"tasks\"));\n    if (savedEntries) {\n      setEntries(savedEntries);\n    };\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(entries));\n  }, [entries]);\n\n  return (\n    <div>\n      <h3 className=\"text-center\">To Do List</h3>\n      <CreateToDo setEntries={setEntries} entries={entries} />\n      {entries.map((entry) => (\n        <ToDo\n          task={entry.entry}\n          done={entry.done}\n          id={entry.id}\n          key={entry.id}\n          entries={entries}\n          setEntries={setEntries}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}